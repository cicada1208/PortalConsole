<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.PasswordBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PasswordBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style 
        x:Key="Style.PasswordBox.AutoSize" 
        BasedOn="{StaticResource MahApps.Styles.PasswordBox.Button.Revealed}"
        TargetType="PasswordBox">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter 
                    Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self}, 
                    Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="mah:TextBoxHelper.ClearTextButton" 
                    Value="{Binding RelativeSource={RelativeSource Self}, 
                    Path=(mah:TextBoxHelper.HasText), Mode=OneWay}"/>
                <!--<Setter Property="mah:TextBoxHelper.IsWaitingForData" Value="True" />-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style 
        x:Key="Style.PasswordBox.Slim" 
        BasedOn="{StaticResource Style.PasswordBox.AutoSize}"
        TargetType="PasswordBox">
        <Setter Property="MinWidth" Value="200" />
    </Style>

    <Style 
        x:Key="Style.PasswordBox.MaterialDesignFloatingHint.AutoSize" 
        BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}"
        TargetType="PasswordBox">
        <Setter Property="FontFamily" Value="{DynamicResource MaterialDesignFont}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="materialDesign:ValidationAssist.FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="materialDesign:ValidationAssist.OnlyShowOnFocus" Value="True" />
        <Setter Property="materialDesign:ValidationAssist.UsePopup" Value="True" />
        <Setter Property="materialDesign:HintAssist.HelperTextFontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="1" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style 
        x:Key="Style.PasswordBox.MaterialDesignFloatingHint.Slim" 
        BasedOn="{StaticResource Style.PasswordBox.MaterialDesignFloatingHint.AutoSize}"
        TargetType="PasswordBox">
        <Setter Property="MinWidth" Value="200" />
    </Style>

    <!--<Style 
        x:Key="Style.PasswordBox" 
        TargetType="PasswordBox">
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="25" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter 
            Property="BorderBrush" 
            Value = "{DynamicResource {x:Static SystemColors.ScrollBarBrushKey}}" />
        <Setter 
            Property="Validation.ErrorTemplate" 
            Value="{StaticResource CTemplate.ValidationError.Right}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter 
                    Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self}, 
                    Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

</ResourceDictionary>