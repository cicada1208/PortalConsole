//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lib.Wpf.ADWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.cych.org.tw/", ConfigurationName="ADWebService.AdUserIdentifySoap")]
    public interface AdUserIdentifySoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cych.org.tw/Verify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Verify(string UserId, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cych.org.tw/Verify", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> VerifyAsync(string UserId, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cych.org.tw/VerifyUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool VerifyUser(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cych.org.tw/VerifyUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> VerifyUserAsync(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cych.org.tw/IsEmpUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsEmpUser(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cych.org.tw/IsEmpUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsEmpUserAsync(string UserId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AdUserIdentifySoapChannel : Lib.Wpf.ADWebService.AdUserIdentifySoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdUserIdentifySoapClient : System.ServiceModel.ClientBase<Lib.Wpf.ADWebService.AdUserIdentifySoap>, Lib.Wpf.ADWebService.AdUserIdentifySoap {
        
        public AdUserIdentifySoapClient() {
        }
        
        public AdUserIdentifySoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdUserIdentifySoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdUserIdentifySoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdUserIdentifySoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Verify(string UserId, string Pwd) {
            return base.Channel.Verify(UserId, Pwd);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyAsync(string UserId, string Pwd) {
            return base.Channel.VerifyAsync(UserId, Pwd);
        }
        
        public bool VerifyUser(string UserId) {
            return base.Channel.VerifyUser(UserId);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyUserAsync(string UserId) {
            return base.Channel.VerifyUserAsync(UserId);
        }
        
        public bool IsEmpUser(string UserId) {
            return base.Channel.IsEmpUser(UserId);
        }
        
        public System.Threading.Tasks.Task<bool> IsEmpUserAsync(string UserId) {
            return base.Channel.IsEmpUserAsync(UserId);
        }
    }
}
